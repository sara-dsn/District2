 <?php

namespace App\EventSubscriber;

use Symfony\Component\Mime\Email;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Mailer\MailerInterface;
use Symfony\Component\HttpKernel\KernelEvents;
use Symfony\Component\HttpKernel\Event\ResponseEvent;
use Symfony\Component\HttpFoundation\Session\SessionInterface;
use Symfony\Component\EventDispatcher\EventSubscriberInterface;
use Symfony\Component\Security\Core\User\UserInterface;

class CommandeSubscriber implements EventSubscriberInterface
{
    public function onKernelResponse( Request $request,UserInterface $user, ResponseEvent $event, MailerInterface $mailer): void
    {       
       
        
                $email = (new Email())
                    ->from('The_District@gmail.com')
                    ->to($email)
                    //->cc('cc@example.com')
                    //->bcc('bcc@example.com')
                    //->replyTo('fabien@example.com')
                    //->priority(Email::PRIORITY_HIGH)
                    ->subject('Votre commande est en route!')
                    ->text('rrr'
                        )
                    ->html('<p>See Twig integration for better HTML integration!</p>');
        
                $mailer->send($email);
        
            }

    public static function getSubscribedEvents(): array
    {
        return [
            KernelEvents::RESPONSE => 'onKernelResponse',
        ];
    }
} 
